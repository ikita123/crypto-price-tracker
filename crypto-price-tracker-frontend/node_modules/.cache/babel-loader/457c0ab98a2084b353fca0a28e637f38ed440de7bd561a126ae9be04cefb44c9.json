{"ast":null,"code":"var _jsxFileName = \"/home/nikki/btx-price-chart/src/BTXPriceChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BTXPriceChart = () => {\n  _s();\n  const [data24h, setData24h] = useState([]);\n  const [dataWeek, setDataWeek] = useState([]);\n  const [dataMonth, setDataMonth] = useState([]);\n  useEffect(() => {\n    fetchData('24h', setData24h);\n    fetchData('7d', setDataWeek);\n    fetchData('30d', setDataMonth);\n  }, []);\n  const fetchData = async (days, setData) => {\n    try {\n      const response = await axios.get(`/api/v3/coins/bitcore/market_chart`, {\n        params: {\n          vs_currency: 'usd',\n          days: days\n        }\n      });\n      const formattedData = response.data.prices.map(price => ({\n        timestamp: new Date(price[0]).toLocaleString(),\n        price: price[1]\n      }));\n      setData(formattedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const renderChart = (label, data) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: data.map(item => item.timestamp),\n          datasets: [{\n            label: 'BTX Price',\n            data: data.map(item => item.price),\n            borderColor: 'blue',\n            fill: false\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BTX Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [renderChart('Last 24 Hours', data24h), renderChart('Weekly', dataWeek), renderChart('Monthly', dataMonth)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(BTXPriceChart, \"BVoMvGJk7xBHM0Ngbce5XvWSfuc=\");\n_c = BTXPriceChart;\nexport default BTXPriceChart;\nvar _c;\n$RefreshReg$(_c, \"BTXPriceChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","BTXPriceChart","_s","data24h","setData24h","dataWeek","setDataWeek","dataMonth","setDataMonth","fetchData","days","setData","response","get","params","vs_currency","formattedData","data","prices","map","price","timestamp","Date","toLocaleString","error","console","renderChart","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","item","datasets","borderColor","fill","_c","$RefreshReg$"],"sources":["/home/nikki/btx-price-chart/src/BTXPriceChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\n\nconst BTXPriceChart = () => {\n  const [data24h, setData24h] = useState([]);\n  const [dataWeek, setDataWeek] = useState([]);\n  const [dataMonth, setDataMonth] = useState([]);\n\n  useEffect(() => {\n    fetchData('24h', setData24h);\n    fetchData('7d', setDataWeek);\n    fetchData('30d', setDataMonth);\n  }, []);\n\n  const fetchData = async (days, setData) => {\n    try {\n      const response = await axios.get(`/api/v3/coins/bitcore/market_chart`, {\n        params: {\n          vs_currency: 'usd',\n          days: days,\n        },\n      });\n      const formattedData = response.data.prices.map((price) => ({\n        timestamp: new Date(price[0]).toLocaleString(),\n        price: price[1],\n      }));\n      setData(formattedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  \n\n  const renderChart = (label, data) => {\n    return (\n      <div className=\"chart-card\">\n        <h2>{label}</h2>\n        <Line\n          data={{\n            labels: data.map(item => item.timestamp),\n            datasets: [{\n              label: 'BTX Price',\n              data: data.map(item => item.price),\n              borderColor: 'blue',\n              fill: false,\n            }],\n          }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>BTX Price Chart</h1>\n      <div className=\"chart-container\">\n        {renderChart('Last 24 Hours', data24h)}\n        {renderChart('Weekly', dataWeek)}\n        {renderChart('Monthly', dataMonth)}\n      </div>\n    </div>\n  );\n};\n\nexport default BTXPriceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}