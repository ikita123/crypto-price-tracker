{"ast":null,"code":"var _jsxFileName = \"/home/nikki/btx-price-chart/src/BTXPriceChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst BTXPriceChart = () => {\n  _s();\n  var _additionalData$perce;\n  const [data24h, setData24h] = useState([]);\n  const [dataWeek, setDataWeek] = useState([]);\n  const [dataMonth, setDataMonth] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n  const [currentLabel, setCurrentLabel] = useState('Last 24 Hours');\n  const [activePeriod, setActivePeriod] = useState('24h');\n  const [additionalData, setAdditionalData] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setCurrentData(data24h);\n  }, [data24h]);\n  const fetchDataFromAPI = async (days, setData) => {\n    setLoading(true);\n    try {\n      console.log('Fetching data...');\n      const response = await axios.get(`http://localhost:5000/api/price-change`, {\n        params: {\n          vs_currency: 'usd',\n          days: days\n        }\n      });\n      console.log(response.data, 'API response');\n      const formattedData = response.data.priceData.map(item => ({\n        timestamp: item.timestamp,\n        price: item.price\n      }));\n      setData(formattedData);\n      setAdditionalData(response.data);\n    } catch (error) {\n      console.error('Error fetching data from API:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleButtonClick = async period => {\n    try {\n      let responseData;\n      switch (period) {\n        case '24h':\n          responseData = await fetchDataFromAPI(1, setData24h);\n          setCurrentLabel('Last 24 Hours');\n          break;\n        case 'week':\n          responseData = await fetchDataFromAPI(7, setDataWeek);\n          setCurrentLabel('Last Week');\n          break;\n        case 'month':\n          responseData = await fetchDataFromAPI(30, setDataMonth);\n          setCurrentLabel('Last Month');\n          break;\n        default:\n          responseData = await fetchDataFromAPI(1, setData24h);\n          setCurrentLabel('Last 24 Hours');\n      }\n      setActivePeriod(period);\n    } catch (error) {\n      console.error('Error handling button click:', error);\n    }\n  };\n  const renderChart = (label, data) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: data.map(item => new Date(item.timestamp)),\n        datasets: [{\n          label: '$',\n          data: data.map(item => item.price),\n          borderColor: 'blue',\n          backgroundColor: 'rgba(0, 123, 255, 0.2)',\n          fill: true\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            display: false\n          },\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day',\n              tooltipFormat: 'MMM d',\n              displayFormats: {\n                day: 'MMM d'\n              }\n            },\n            ticks: {\n              callback: function (value, index, values) {\n                const date = new Date(values[index].value);\n                return date.toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric'\n                });\n              }\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            displayColors: false,\n            callbacks: {\n              label: function (context) {\n                let label = '';\n                if (context.parsed.y !== null && context.parsed.y !== undefined) {\n                  label += context.parsed.y.toFixed(3);\n                }\n                return label;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"infobtn\",\n          title: \"BTX Price Chart\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview\",\n        children: [\"Max records\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hardcoded\",\n          children: additionalData === null || additionalData === void 0 ? void 0 : additionalData.maxRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview\",\n        children: [\"Comparative rates\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue\",\n          children: [\"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hardcoded\",\n            children: additionalData === null || additionalData === void 0 ? void 0 : additionalData.comparativeRates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activePeriod === '24h' ? 'active' : ''}`,\n          onClick: () => handleButtonClick('24h'),\n          children: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activePeriod === 'week' ? 'active' : ''}`,\n          onClick: () => handleButtonClick('week'),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activePeriod === 'month' ? 'active' : ''}`,\n          onClick: () => handleButtonClick('month'),\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : renderChart(currentLabel, currentData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hardcoded-left\",\n          children: [\"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"overview-left\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: additionalData === null || additionalData === void 0 ? void 0 : (_additionalData$perce = additionalData.percentageChange) === null || _additionalData$perce === void 0 ? void 0 : _additionalData$perce.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"percentage\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-right-grey\",\n          children: [\"Last updated: \", new Date(additionalData === null || additionalData === void 0 ? void 0 : additionalData.lastUpdated).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hardcoded\",\n          children: [\"Today, \", new Date().toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(BTXPriceChart, \"jzanysPWPTxLpTEX4z6XkljtFCo=\");\n_c = BTXPriceChart;\nexport default BTXPriceChart;\nvar _c;\n$RefreshReg$(_c, \"BTXPriceChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","register","BTXPriceChart","_s","_additionalData$perce","data24h","setData24h","dataWeek","setDataWeek","dataMonth","setDataMonth","currentData","setCurrentData","currentLabel","setCurrentLabel","activePeriod","setActivePeriod","additionalData","setAdditionalData","loading","setLoading","fetchDataFromAPI","days","setData","console","log","response","get","params","vs_currency","data","formattedData","priceData","map","item","timestamp","price","error","handleButtonClick","period","responseData","renderChart","label","className","children","labels","Date","datasets","borderColor","backgroundColor","fill","options","scales","y","display","x","type","time","unit","tooltipFormat","displayFormats","day","ticks","callback","value","index","values","date","toLocaleString","month","plugins","legend","tooltip","displayColors","callbacks","context","parsed","undefined","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","title","maxRecords","comparativeRates","onClick","percentageChange","lastUpdated","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/home/nikki/btx-price-chart/src/BTXPriceChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst BTXPriceChart = () => {\n  const [data24h, setData24h] = useState([]);\n  const [dataWeek, setDataWeek] = useState([]);\n  const [dataMonth, setDataMonth] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n  const [currentLabel, setCurrentLabel] = useState('Last 24 Hours');\n  const [activePeriod, setActivePeriod] = useState('24h');\n  const [additionalData, setAdditionalData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setCurrentData(data24h);\n  }, [data24h]);\n\n  const fetchDataFromAPI = async (days, setData) => {\n    setLoading(true);\n    try {\n      console.log('Fetching data...');\n      const response = await axios.get(`http://localhost:5000/api/price-change`, {\n        params: { vs_currency: 'usd', days: days },\n      });\n      console.log(response.data, 'API response');\n      const formattedData = response.data.priceData.map((item) => ({\n        timestamp: item.timestamp,\n        price: item.price,\n      }));\n      setData(formattedData);\n      setAdditionalData(response.data);\n    } catch (error) {\n      console.error('Error fetching data from API:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleButtonClick = async (period) => {\n    try {\n      let responseData;\n      switch (period) {\n        case '24h':\n          responseData = await fetchDataFromAPI(1, setData24h);\n          setCurrentLabel('Last 24 Hours');\n          break;\n        case 'week':\n          responseData = await fetchDataFromAPI(7, setDataWeek);\n          setCurrentLabel('Last Week');\n          break;\n        case 'month':\n          responseData = await fetchDataFromAPI(30, setDataMonth);\n          setCurrentLabel('Last Month');\n          break;\n        default:\n          responseData = await fetchDataFromAPI(1, setData24h);\n          setCurrentLabel('Last 24 Hours');\n      }\n      setActivePeriod(period);\n    } catch (error) {\n      console.error('Error handling button click:', error);\n    }\n  };\n\n  const renderChart = (label, data) => (\n    <div className=\"chart-card\">\n      <Line\n        data={{\n          labels: data.map((item) => new Date(item.timestamp)),\n          datasets: [\n            {\n              label: '$',\n              data: data.map((item) => item.price),\n              borderColor: 'blue',\n              backgroundColor: 'rgba(0, 123, 255, 0.2)',\n              fill: true,\n            },\n          ],\n        }}\n        options={{\n          scales: {\n            y: {\n              display: false,\n            },\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n                tooltipFormat: 'MMM d',\n                displayFormats: {\n                  day: 'MMM d',\n                },\n              },\n              ticks: {\n                callback: function (value, index, values) {\n                  const date = new Date(values[index].value);\n                  return date.toLocaleString('en-US', { month: 'short', day: 'numeric' });\n                },\n              },\n            },\n          },\n          plugins: {\n            legend: {\n              display: false,\n            },\n            tooltip: {\n              displayColors: false,\n              callbacks: {\n                label: function (context) {\n                  let label = '';\n                  if (context.parsed.y !== null && context.parsed.y !== undefined) {\n                    label += context.parsed.y.toFixed(3);\n                  }\n                  return label;\n                },\n              },\n            },\n          },\n        }}\n      />\n    </div>\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"child-card\">\n        <div className=\"overview\">\n          <b>Overview</b>\n          <span className=\"infobtn\" title=\"BTX Price Chart\"><i className=\"info\"></i></span>\n        </div>\n        <div className=\"overview\">\n          Max records\n          <span className=\"hardcoded\">{additionalData?.maxRecords}</span>\n        </div>\n        <div className=\"overview\">\n          Comparative rates\n          <div className=\"blue\">+<span className=\"hardcoded\">{additionalData?.comparativeRates}</span></div>\n        </div>\n        <div className=\"button-container\">\n          <button className={`tab-button ${activePeriod === '24h' ? 'active' : ''}`} onClick={() => handleButtonClick('24h')}>24</button>\n          <button className={`tab-button ${activePeriod === 'week' ? 'active' : ''}`} onClick={() => handleButtonClick('week')}>Week</button>\n          <button className={`tab-button ${activePeriod === 'month' ? 'active' : ''}`} onClick={() => handleButtonClick('month')}>Month</button>\n        </div>\n        <div className=\"chart-container\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            renderChart(currentLabel, currentData)\n          )}\n        </div>\n        <div>\n          <div className=\"hardcoded-left\">\n            +<span className=\"overview-left\">\n              <b>{additionalData?.percentageChange?.toFixed(2)}</b>\n            </span>\n            <span className='percentage'>%</span>\n          </div>\n          <span className=\"info-right-grey\">Last updated: {new Date(additionalData?.lastUpdated).toLocaleString()}</span>\n        </div>\n        <div>\n          <span className=\"hardcoded\">Today, {new Date().toLocaleTimeString()}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BTXPriceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}